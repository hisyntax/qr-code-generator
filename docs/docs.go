// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/generate-qrcode": {
            "post": {
                "description": "use this endpoint to generate a qr code . This is an example request payload \"frame_name\": \"no-frame\",  \"qr_code_logo\": \"scan-me-square\"(this is be optional),  \"image_format\": \"PNG, PDF, JPG\",  \"qr_code_text\": \"https://google.com\",",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "qr-code"
                ],
                "summary": "generate qrcode",
                "parameters": [
                    {
                        "description": "qrcode",
                        "name": "qrcode",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/qrcode.QrCode"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        }
    },
    "definitions": {
        "qrcode.QrCode": {
            "type": "object",
            "properties": {
                "frame_name": {
                    "type": "string"
                },
                "image_format": {
                    "type": "string"
                },
                "qr_code_logo": {
                    "type": "string"
                },
                "qr_code_text": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "customqr.herokuapp.com",
	BasePath:         "",
	Schemes:          []string{"https"},
	Title:            "qrcode generator API",
	Description:      "This is the API docs for testing",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
